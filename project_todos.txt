
# XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX STRATEGIE

# MA crossover strategy

#   podmienky EXIT:
#      ked cena crossne MA
#      alebo ked v MA nastane reversal a zacne zrychlovat
#   podmienky ENTRY:
#      nejaku periodu bol MA v raste
#      nejaku dobu potom bol MA viac menej flat
#      cena ho viac krat crossla ked bol flat?
#      potom MA zacal klesat a tento pokles sa zryhluje
#      rozdiel medzi cenou a MA sa zvacsuje
#      ak v teraz nastal cross, kup/predaj

# strategy 2

#   ak cena robi N dni po sebe lower lows / higher highs via ako P percent, ENTRY
#      model ktory bude predikovat napr. sharpe ratio a vstupy budu hodnoty parametrov - na identifikaciu najvplyvnejsich parametrov
#      strategiu hodit do numpy namiesto pandas, pripadne @njit - check o kolko to bude rychlejsie
#      zbehnut to na vsetkych kryptomenach a vsetkych equities
#      vylepsit strategiu nejakym MA (odfiltrovanie zlych entries), stop loss, ...
#      higher highs/lows ako min percento

# strategy 3

#   ak cena poslednych P percent dni za poslednych N dni rastie

# strategy 4

#  ak je open price vyrazne ina ako predosly den close, kup/predaj, a na konci dna zavri
#  mozno len niektore dni, ako napr po vikende

# strategy 5

#   supporta a resistance identifikacia a nakup/predaj pri ich breaknuti

# strategy 6

#   ak cena prvu hodinu po otvoreni vyrazne vzrastie kup, predaj na konci dna

# strategy 7

# data od fin. analytikov - predikcia short term buy - voting viacerych zdrojov

# strategy 8

# kup ak open je vyssia ako predosly den close

# XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX DALSIE STEPY
# nahodenie portfolii do alpacy
#   1. spustim script, ktory natiahne najnovsie data z alpacy alebo yf, pre kazdy symbol
#   2. pre kazdu strategiu a kazdu parameter kombinaciu chekni ci je dnes entry alebo exit signal
#   3. vyhodnot vahy (bude ako 1. po prvej iteracii)
#   4. ak entry signal, daj order. Ked bude order filled, id pozicie prirad ku konkretnemu portfoliu
#   5. ak exit signal, closni poziciu pre dany symbol, strategiu a param kombinaciu pod danym postion id
#   
# zadefinovane portfolia
#    - vsetky final params, vahy budu equal na zaciatok
#    - manualne vyber niekolko, vahy equal
#    - random
#    - vsetky final params, vahy podla (1. podobnost rozdelenia trades/returns s historickym, 2. quartalny % returns, 3. win/loss ratio, 4. std)
#    - manualne so vsetkym co hore
#    - vsetky final params, ale vahy podla performance strategiii a symbolov
#    - tj parametre portfolia:
#      - symbol
#      - strategia
#      - parametre strategie
#      - vahy
#      - position size/portfolio size (tj 100 USD napr)
#      - rebalance true false
#      - id
#    - script construct_portfolio.py ktory vytvori json, yaml alebo df, kde budu tieto portfolia zadefinovane
# portfolio constructor (neskor):
#    - chcem vidiet historicky vyvoj portfolia
#    - moznosti optimalizacie vah
#    - moznosti - manualny vyber symbolov, ich strategii a params, random, ...
#    - vazenie, postion sizing, rebalancing
# nakod a backtestuj dalsiu strategiu a cele zopakuj
# db - ???
#   symboly a data o nich