
# XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX STRATEGIE

# MA crossover strategy

#   podmienky EXIT:
#      ked cena crossne MA
#      alebo ked v MA nastane reversal a zacne zrychlovat
#   podmienky ENTRY:
#      nejaku periodu bol MA v raste
#      nejaku dobu potom bol MA viac menej flat
#      cena ho viac krat crossla ked bol flat?
#      potom MA zacal klesat a tento pokles sa zryhluje
#      rozdiel medzi cenou a MA sa zvacsuje
#      ak v teraz nastal cross, kup/predaj

# strategy 2

#   ak cena robi N dni po sebe lower lows / higher highs via ako P percent, ENTRY
#      model ktory bude predikovat napr. sharpe ratio a vstupy budu hodnoty parametrov - na identifikaciu najvplyvnejsich parametrov
#      strategiu hodit do numpy namiesto pandas, pripadne @njit - check o kolko to bude rychlejsie
#      zbehnut to na vsetkych kryptomenach a vsetkych equities
#      vylepsit strategiu nejakym MA (odfiltrovanie zlych entries), stop loss, ...
#      higher highs/lows ako min percento

# strategy 3

#   ak cena poslednych P percent dni za poslednych N dni rastie

# strategy 4

#  ak je open price vyrazne ina ako predosly den close, kup/predaj, a na konci dna zavri
#  mozno len niektore dni, ako napr po vikende

# strategy 5

#   supporta a resistance identifikacia a nakup/predaj pri ich breaknuti

# strategy 6

#   ak cena prvu hodinu po otvoreni vyrazne vzrastie kup, predaj na konci dna

# strategy 7

# data od fin. analytikov - predikcia short term buy - voting viacerych zdrojov

# strategy 8

# kup ak open je vyssia ako predosly den close

# XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX DALSIE STEPY
# dopocitat ostatne metriky v portfoliu
# strategy backtest - foldre podla priorit
# v strategy backtest user prompt na parameter "vymazat foldre"
# validovat ci portfolio scripty funguju spravne (obchody)
# zopakovat test portfolii na 10k 
# zadefinovane portfolia
#    - vsetky final params, vahy budu equal na zaciatok
#    - manualne vyber niekolko, vahy equal
#    - random
#    - vsetky final params, vahy podla (1. podobnost rozdelenia trades/returns s historickym, 2. quartalny % returns, 3. win/loss ratio, 4. std)
#    - manualne so vsetkym co hore
#    - vsetky final params, ale vahy podla performance strategiii a symbolov
#    - script construct_portfolio.py ktory vytvori json, yaml alebo df, kde budu tieto portfolia zadefinovane
# portfolio constructor (neskor):
#    - chcem vidiet historicky vyvoj portfolia
#    - moznosti optimalizacie vah
#    - moznosti - manualny vyber symbolov, ich strategii a params, random, ...
#    - vazenie, postion sizing, rebalancing
# symbol selector (neskor) - uz zacaty select_symbols.py
# nakod a backtestuj dalsiu strategiu a cele zopakuj
# db - ???
#   symboly a data o nich

# portfolio test

# 4 portfolia 4x10 symbolov
# 1. najlepsie strategie z top 11 symbolov, equal weights
#   PLTR - 9,1,2,2
#   BTC/USD - 3,1,7,4
#   AAL - 2,2,3,3
#   VRT - 4,1,6,2
#   GBTC - 2,1,8,2
#   DELL - 2,1,3,3
#   GM - 8,1,8,1
#   IYR - 10,2,2,2
#   DKNG - 2,1,4,2
#   EBAY - 3,2,4,4
#   CRWD - 10,2,2,1

# 2. dalsie najlepsie symboly, 10, win_rate
#   AAPL - 3,1,6,4
#   GOOGL - 6,1,2,1
#   META - 3,1,4,4
#   MRVL - 5,1,3,3
#   MSTR - 2,2,9,4
#   SCHD - 6,1,2,1
#   BITO - 2,1,3,1
#   AVGO - 6,1,2,2
#   SOUN - 3,2,2,2

# 3. dalsie vhodne, equal
#   TSLA - 4,1,6,2
#   NVDA - 4,1,3,3
#   AMD - 2,1,6,3
#   QQQ - 9,1,2,1
#   AMZN - 6,1,2,2
#   TQQQ - 2,1,8,5
#   VOO - 6,1,2,2
#   BABA - 6,1,2,2
#   BA - 7,1,2,2
#   XLI - 4,1,6,2

# 4. co nevoslo do prvych troch, 20, equal
#   RIOT - 2,1,2,2
#   NEE - 4,1,4,4
#   SLV - 7,1,2,1
#   SHOP - 7,1,2,1
#   FAST - 7,1,2,1
#   SPXL - 5,1,3,1
#   VALE - 10,1,2,1
#   SNAP - 4,3,3,3
#   WDC - 3,1,5,5
#   MO - 6,1,2,1
#   PM - 7,1,2,2
#   SQ - 2,1,6,3
#   PDD - 2,1,2,1
#   ABBV - 2,1,5,3
#   ON - 6,1,2,2
#   UPRO - 7,1,2,1
#   TSLL - 2,2,4,4
#   PBR - 4,1,3,3
#   MP - 7,1,2,2
#   U - 2,1,6,3